{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"ArtBox","text":"<p>ArtBox is a tool set for handling multimedia files.</p> <ul> <li>Documentation: https://ggpedia.games</li> <li>License: BSD-3 Clause</li> </ul>"},{"location":"#features","title":"Features","text":"<p>TBD</p>"},{"location":"#setup","title":"Setup","text":"<p>ArtBox uses some dependencies that maybe would not work well in your machine. In order to have everything well installed, create a conda/mamba environment and install <code>artbox</code> there.</p> <pre><code>$ mamba create --name artbox \"python&gt;=3.8.1,&lt;3.12\" pygobject pip\n$ conda activate artbox\n$ pip install artbox\n</code></pre>"},{"location":"#examples","title":"Examples","text":"<p>For the following examples, create the a temporary folder for artbox:</p> <pre><code>$ mkdir /tmp/artbox\n</code></pre>"},{"location":"#convert-text-to-audio","title":"Convert text to audio","text":"<p>By default, the <code>artbox voice</code> uses <code>edge-tts</code> engine, but if you can also specify <code>gtts</code> with the flag <code>--engine gtts</code>.</p> <pre><code>$ echo \"Are you ready to join Link and Zelda in fighting off this unprecedented threat to Hyrule?\" &gt; /tmp/artbox/text.md\n$ artbox voice text-to-speech \\\n    --title artbox \\\n    --text-path /tmp/artbox/text.md \\\n    --output-path /tmp/artbox/voice.mp3 \\\n    --engine edge-tts\n</code></pre> <p>If you need to generate the audio for different language, you can use the flag <code>--lang</code>:</p> <pre><code>$ echo \"Bom dia, mundo!\" &gt; /tmp/artbox/text.md\n$ artbox voice text-to-speech \\\n    --title artbox \\\n    --text-path /tmp/artbox/text.md \\\n    --output-path /tmp/artbox/voice.mp3 \\\n    --lang pt\n</code></pre> <p>If you are using <code>edge-tts</code> engine (the default one), you can also specify the locale for that language, for example:</p> <pre><code>$ echo \"Are you ready to join Link and Zelda in fighting off this unprecedented threat to Hyrule?\" &gt; /tmp/artbox/text.md\n$ artbox voice text-to-speech \\\n    --title artbox \\\n    --text-path /tmp/artbox/text.md \\\n    --output-path /tmp/artbox/voice.mp3 \\\n    --engine edge-tts \\\n    --lang en-IN\n</code></pre>"},{"location":"#download-a-youtube-video","title":"Download a youtube video","text":"<p>If you want to download videos from the youtube, you can use the following command:</p> <pre><code>$ artbox youtube download \\\n    --url https://www.youtube.com/watch?v=zw47_q9wbBE \\\n    --output-path /tmp/artbox/\n</code></pre> <p>The command above downloads using a random resolution. If you want a specific resolution, use the flat <code>--resolution</code>:</p> <pre><code>$ artbox youtube download \\\n    --url https://www.youtube.com/watch?v=zw47_q9wbBE \\\n    --output-path /tmp/artbox/ \\\n    --resolution 360p\n</code></pre>"},{"location":"#create-a-song-based-on-the-musical-notes","title":"Create a song based on the musical notes","text":"<pre><code># json format\necho '[\"E\", \"D#\", \"E\", \"D#\", \"E\", \"B\", \"D\", \"C\", \"A\"]' &gt; /tmp/artbox/notes.txt\n$ artbox sound notes-to-audio \\\n  --input-path /tmp/artbox/notes.txt \\\n  --output-path /tmp/artbox/music.mp3 \\\n  --duration 2\n</code></pre>"},{"location":"#remove-the-audio-from-a-video","title":"Remove the audio from a video","text":"<p>First, download the youtube video <code>https://www.youtube.com/watch?v=zw47_q9wbBE</code> as explained before.</p> <p>Next, run the following command:</p> <pre><code>$ artbox video remove-audio \\\n  --input-path \"/tmp/artbox/The Legend of Zelda Breath of the Wild - Nintendo Switch Presentation 2017 Trailer.mp4\" \\\n  --output-path /tmp/artbox/botw.mp4\n</code></pre>"},{"location":"#extract-the-audio-from-a-video","title":"Extract the audio from a video","text":"<p>First, download the youtube video <code>https://www.youtube.com/watch?v=zw47_q9wbBE</code> as explained before.</p> <p>Next, run the following command:</p> <pre><code>$ artbox video extract-audio \\\n  --input-path \"/tmp/artbox/The Legend of Zelda Breath of the Wild - Nintendo Switch Presentation 2017 Trailer.mp4\" \\\n  --output-path /tmp/artbox/botw-audio.mp3\n</code></pre>"},{"location":"#combine-audio-and-video-files","title":"Combine audio and video files","text":"<p>First, execute the previous steps:</p> <ul> <li>Download a youtube video</li> <li>Remove the audio from a video</li> <li>Extract the audio from a video</li> </ul> <p>Next, run the following command:</p> <pre><code>$ artbox video combine-video-and-audio \\\n  --video-path /tmp/artbox/botw.mp4 \\\n  --audio-path /tmp/artbox/botw-audio.mp3 \\\n  --output-path /tmp/artbox/botw-combined.mp4\n</code></pre>"},{"location":"#additional-dependencies","title":"Additional dependencies","text":"<p>If you want to use Python to play your audio files, you can install <code>playsound</code>:</p> <pre><code>$ pip wheel --use-pep517 \"playsound (==1.3.0)\"\n</code></pre>"},{"location":"#troubleshoot","title":"Troubleshoot","text":"<p>After installing with <code>poetry install</code>:</p> <ul> <li>Patch <code>pytube</code> (ref: pytube/pytube#1773):   <code>sed -i 's/(r\"^$\\\\w+\\\\W\")/(r\"^\\\\w+\\\\W\")/' $CONDA_PREFIX/lib/python3.*/site-packages/pytube/cipher.py</code></li> </ul>"},{"location":"changelog/","title":"Release Notes","text":""},{"location":"changelog/#053-2024-01-31","title":"0.5.3 (2024-01-31)","text":""},{"location":"changelog/#bug-fixes","title":"Bug Fixes","text":"<ul> <li>dependency: Add typer as a direct dependency (#23) (a2ea8ea)</li> </ul>"},{"location":"changelog/#052-2024-01-31","title":"0.5.2 (2024-01-31)","text":""},{"location":"changelog/#bug-fixes_1","title":"Bug Fixes","text":"<ul> <li>dependencies: Add numpy as direct dependence (#22) (abd050c)</li> </ul>"},{"location":"changelog/#051-2024-01-31","title":"0.5.1 (2024-01-31)","text":""},{"location":"changelog/#bug-fixes_2","title":"Bug Fixes","text":"<ul> <li>Fix dependency issues (#21) (43e5445)</li> </ul>"},{"location":"changelog/#050-2024-01-21","title":"0.5.0 (2024-01-21)","text":""},{"location":"changelog/#features","title":"Features","text":"<ul> <li>Change CLI backend to Typer (#19) (8223bd1)</li> </ul>"},{"location":"changelog/#041-2024-01-19","title":"0.4.1 (2024-01-19)","text":""},{"location":"changelog/#bug-fixes_3","title":"Bug Fixes","text":"<ul> <li>Fix dependencies (#16) (0f0feec)</li> <li>Update dependencies (#17) (fb1303e)</li> </ul>"},{"location":"changelog/#release-notes_1","title":"Release Notes","text":""},{"location":"changelog/#040-2023-09-04","title":"0.4.0 (2023-09-04)","text":""},{"location":"changelog/#features_1","title":"Features","text":"<ul> <li>add option for downloading from youtube with a specific resolution. (#7) (933d937)</li> </ul>"},{"location":"changelog/#030-2023-08-30","title":"0.3.0 (2023-08-30)","text":""},{"location":"changelog/#features_2","title":"Features","text":"<ul> <li>Add engine options for Voice class. (#6) (d4381f7)</li> </ul>"},{"location":"changelog/#020-2023-08-29","title":"0.2.0 (2023-08-29)","text":""},{"location":"changelog/#bug-fixes_4","title":"Bug Fixes","text":"<ul> <li>Fix release workflow (#3) (1407997)</li> <li>Fix release workflow permissions (#5) (90931d4)</li> </ul>"},{"location":"changelog/#features_3","title":"Features","text":"<ul> <li>Add the flag <code>--lang</code> for the voice command (#2) (cb937e9)</li> </ul>"},{"location":"contributing/","title":"Contributing","text":"<p>In order to be able to contribute, it is important that you understand the project layout. This project uses the src layout, which means that the package code is located at <code>./src/artbox</code>.</p> <p>For my information, check the official documentation: https://packaging.python.org/en/latest/discussions/src-layout-vs-flat-layout/</p> <p>In addition, you should know that to build our package we use Poetry, it's a Python package management tool that simplifies the process of building and publishing Python packages. It allows us to easily manage dependencies, virtual environments and package versions. Poetry also includes features such as dependency resolution, lock files and publishing to PyPI. Overall, Poetry streamlines the process of managing Python packages, making it easier for us to create and share our code with others.</p> <p>Contributions are welcome, and they are greatly appreciated! Every little bit helps, and credit will always be given.</p> <p>You can contribute in many ways:</p>"},{"location":"contributing/#types-of-contributions","title":"Types of Contributions","text":""},{"location":"contributing/#report-bugs","title":"Report Bugs","text":"<p>Report bugs at https://github.com/ggpedia/artbox/issues.</p> <p>If you are reporting a bug, please include:</p> <ul> <li>Your operating system name and version.</li> <li>Any details about your local setup that might be helpful in troubleshooting.</li> <li>Detailed steps to reproduce the bug.</li> </ul>"},{"location":"contributing/#fix-bugs","title":"Fix Bugs","text":"<p>Look through the GitHub issues for bugs. Anything tagged with \u201cbug\u201d and \u201chelp wanted\u201d is open to whoever wants to implement it.</p>"},{"location":"contributing/#implement-features","title":"Implement Features","text":"<p>Look through the GitHub issues for features. Anything tagged with \u201cenhancement\u201d and \u201chelp wanted\u201d is open to whoever wants to implement it.</p>"},{"location":"contributing/#write-documentation","title":"Write Documentation","text":"<p>GGPEDIA Youtube could always use more documentation, whether as part of the official GGPEDIA Youtube docs, in docstrings, or even on the web in blog posts, articles, and such.</p>"},{"location":"contributing/#submit-feedback","title":"Submit Feedback","text":"<p>The best way to send feedback is to file an issue at https://github.com/ggpedia/artbox/issues.</p> <p>If you are proposing a feature:</p> <ul> <li>Explain in detail how it would work.</li> <li>Keep the scope as narrow as possible, to make it easier to implement.</li> <li>Remember that this is a volunteer-driven project, and that contributions are   welcome :)</li> </ul>"},{"location":"contributing/#get-started","title":"Get Started!","text":"<p>Ready to contribute? Here\u2019s how to set up <code>artbox</code> for local development.</p> <ol> <li> <p>Fork the <code>artbox</code> repo on GitHub.</p> </li> <li> <p>Clone your fork locally::</p> <p>$ git clone git@github.com:your_name_here/artbox.git</p> </li> <li> <p>Install your local copy into a virtualenv. Assuming you have     virtualenvwrapper installed, this is how you set up your fork for local     development::</p> <p>$ mkvirtualenv artbox $ cd artbox/ $ python setup.py develop</p> </li> <li> <p>Create a branch for local development::</p> <p>$ git checkout -b name-of-your-bugfix-or-feature</p> <p>Now you can make your changes locally.</p> </li> <li> <p>When you\u2019re done making changes, check that your changes pass flake8 and the     tests, including testing other Python versions with tox::</p> <p>$ make lint $ make test</p> <p>To get flake8 and tox, just pip install them into your virtualenv.</p> </li> <li> <p>Commit your changes and push your branch to GitHub::</p> <p>$ git add . $ git commit -m \u201cYour detailed description of your changes.\u201d $ git push origin name-of-your-bugfix-or-feature</p> </li> <li> <p>Submit a pull request through the GitHub website.</p> </li> </ol>"},{"location":"contributing/#pull-request-guidelines","title":"Pull Request Guidelines","text":"<p>Before you submit a pull request, check that it meets these guidelines:</p> <ol> <li>The pull request should include tests.</li> <li>If the pull request adds functionality, the docs should be updated. Put your     new functionality into a function with a docstring, and add the feature to     the list in README.rst.</li> <li>The pull request should work for Python &gt;= 3.8.</li> </ol>"},{"location":"contributing/#tips","title":"Tips","text":"<p>To run a subset of tests::</p> <pre><code>$ pytest tests.test_ggpyt\n</code></pre>"},{"location":"contributing/#release","title":"Release","text":"<p>This project uses semantic-release in order to cut a new release based on the commit-message.</p>"},{"location":"contributing/#commit-message-format","title":"Commit message format","text":"<p>semantic-release uses the commit messages to determine the consumer impact of changes in the codebase. Following formalized conventions for commit messages, semantic-release automatically determines the next semantic version number, generates a changelog and publishes the release.</p> <p>By default, semantic-release uses Angular Commit Message Conventions. The commit message format can be changed with the <code>preset</code> or <code>config</code> options_ of the @semantic-release/commit-analyzer and @semantic-release/release-notes-generator plugins.</p> <p>Tools such as commitizen or commitlint can be used to help contributors and enforce valid commit messages.</p> <p>The table below shows which commit message gets you which release type when <code>semantic-release</code> runs (using the default configuration):</p> Commit message Release type <code>fix(pencil): stop graphite breaking when pressure is applied</code> Fix Release <code>feat(pencil): add 'graphiteWidth' option</code> Feature Release <code>perf(pencil): remove graphiteWidth option</code> Chore <code>BREAKING CHANGE: The graphiteWidth option has been removed</code> Breaking Release <p>source: https://github.com/semantic-release/semantic-release/blob/master/README.md#commit-message-format</p> <p>As this project uses the <code>squash and merge</code> strategy, ensure to apply the commit message format to the PR's title.</p>"},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#stable-release","title":"Stable release","text":"<p>To install GGPEDIA Youtube, run this command in your terminal:</p> <pre><code>$ pip install artbox\n</code></pre> <p>This is the preferred method to install GGPEDIA Youtube, as it will always install the most recent stable release.</p> <p>If you don't have pip installed, this Python installation guide can guide you through the process.</p>"},{"location":"installation/#from-sources","title":"From sources","text":"<p>The sources for GGPEDIA Youtube can be downloaded from the Github repo.</p> <p>You can either clone the public repository:</p> <pre><code>$ git clone https://github.com/ggpedia/artbox\n</code></pre> <p>Or download the tarball:</p> <pre><code>$ curl -OJL https://github.com/ggpedia/artbox/tarball/main\n</code></pre> <p>Once you have a copy of the source, you can install it with:</p> <pre><code>$ poetry install\n</code></pre>"},{"location":"api/references/","title":"Api references","text":""},{"location":"api/references/#artbox","title":"<code>artbox</code>","text":"<p>GGPEDIA Youtube.</p>"},{"location":"api/references/#artbox-functions","title":"Functions","text":""},{"location":"api/references/#artbox.get_version","title":"<code>get_version()</code>","text":"<p>Return the program version.</p>"}]}